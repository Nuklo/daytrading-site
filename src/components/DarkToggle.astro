---
/* kein Props n√∂tig */
---
<button id="theme-toggle"
        type="button"
        class="group inline-flex items-center gap-2 select-none"
        role="switch"
        aria-checked="false"
        aria-label="Theme umschalten">
  <!-- Track -->
  <span class="relative inline-flex h-6 w-11 items-center rounded-full bg-neutral-300 dark:bg-neutral-700 transition-colors">
    <!-- Thumb -->
    <span id="theme-thumb"
          class="inline-block h-5 w-5 translate-x-0 rounded-full bg-white shadow transition-transform will-change-transform"></span>
  </span>
  <!-- Beschriftung -->
  <span id="theme-label" class="text-sm opacity-80">Light</span>

</button>

<script>
  const root  = document.documentElement;
  const btn   = document.getElementById("theme-toggle");
  const thumb = document.getElementById("theme-thumb");
  const label = document.getElementById("theme-label");

  function apply(mode /* 'dark' | 'light' */) {
    const isDark = mode === "dark";
    root.classList.toggle("dark", isDark);        // explizit setzen
    btn.setAttribute("aria-checked", String(isDark));
    label.textContent = isDark ? "Dark" : "Light";
    thumb.classList.toggle("translate-x-5", isDark);
    try { localStorage.setItem("theme", isDark ? "dark" : "light"); } catch {}
  }

  // Initial: aus HTML-Klasse/Storage/Pref ableiten
  (function init(){
    let isDark = root.classList.contains("dark");
    try {
      const saved = localStorage.getItem("theme");
      if (saved) isDark = saved === "dark";
      else if (window.matchMedia?.("(prefers-color-scheme: dark)")?.matches) isDark = true;
    } catch {}
    apply(isDark ? "dark" : "light");
  })();

  btn?.addEventListener("click", () => {
    const isDark = root.classList.contains("dark");
    apply(isDark ? "light" : "dark");             // explizit umschalten
  });
</script>

